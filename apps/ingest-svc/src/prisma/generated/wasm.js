
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.IngestDocumentScalarFieldEnum = {
  documentId: 'documentId',
  tenantId: 'tenantId',
  requestedBy: 'requestedBy',
  title: 'title',
  contentType: 'contentType',
  visibility: 'visibility',
  retentionPolicy: 'retentionPolicy',
  metadata: 'metadata',
  sourceUri: 'sourceUri',
  sourceBucket: 'sourceBucket',
  sourceKey: 'sourceKey',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.IngestDocumentChunkScalarFieldEnum = {
  documentId: 'documentId',
  chunkId: 'chunkId',
  chunkIndex: 'chunkIndex',
  content: 'content',
  preview: 'preview',
  tokenCount: 'tokenCount',
  embedding: 'embedding',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  IngestDocument: 'IngestDocument',
  IngestDocumentChunk: 'IngestDocumentChunk'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/workspace/apps/ingest-svc/src/prisma/generated",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "linux-arm64-openssl-1.1.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/workspace/apps/ingest-svc/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "INGEST_DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/prisma/generated\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"INGEST_DATABASE_URL\")\n}\n\nmodel IngestDocument {\n  documentId      String   @id @map(\"document_id\")\n  tenantId        String?  @map(\"tenant_id\")\n  requestedBy     String?  @map(\"requested_by\")\n  title           String\n  contentType     String?  @map(\"content_type\")\n  visibility      String?\n  retentionPolicy String?  @map(\"retention_policy\")\n  metadata        Json?\n  sourceUri       String?  @map(\"source_uri\")\n  sourceBucket    String?  @map(\"source_bucket\")\n  sourceKey       String?  @map(\"source_key\")\n  createdAt       DateTime @default(now()) @map(\"created_at\")\n  updatedAt       DateTime @updatedAt @map(\"updated_at\")\n\n  chunks IngestDocumentChunk[]\n\n  @@map(\"ingest_documents\")\n}\n\nmodel IngestDocumentChunk {\n  documentId String   @map(\"document_id\")\n  chunkId    String   @map(\"chunk_id\")\n  chunkIndex Int      @map(\"chunk_index\")\n  content    String\n  preview    String?\n  tokenCount Int?     @map(\"token_count\")\n  embedding  Json?\n  createdAt  DateTime @default(now()) @map(\"created_at\")\n\n  document IngestDocument @relation(fields: [documentId], references: [documentId], onDelete: Cascade)\n\n  @@id([documentId, chunkId])\n  @@index([documentId, chunkIndex], map: \"ingest_document_chunks_document_idx\")\n  @@map(\"ingest_document_chunks\")\n}\n",
  "inlineSchemaHash": "0f2e05a7ba8aed520378715e3af9cfa817d489ab6f6a3a52ebab413e021b8608",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"IngestDocument\":{\"fields\":[{\"name\":\"documentId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"document_id\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tenant_id\"},{\"name\":\"requestedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"requested_by\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contentType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"content_type\"},{\"name\":\"visibility\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"retentionPolicy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"retention_policy\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"sourceUri\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"source_uri\"},{\"name\":\"sourceBucket\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"source_bucket\"},{\"name\":\"sourceKey\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"source_key\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"chunks\",\"kind\":\"object\",\"type\":\"IngestDocumentChunk\",\"relationName\":\"IngestDocumentToIngestDocumentChunk\"}],\"dbName\":\"ingest_documents\"},\"IngestDocumentChunk\":{\"fields\":[{\"name\":\"documentId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"document_id\"},{\"name\":\"chunkId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"chunk_id\"},{\"name\":\"chunkIndex\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"chunk_index\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"preview\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tokenCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"token_count\"},{\"name\":\"embedding\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"document\",\"kind\":\"object\",\"type\":\"IngestDocument\",\"relationName\":\"IngestDocumentToIngestDocumentChunk\"}],\"dbName\":\"ingest_document_chunks\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    INGEST_DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['INGEST_DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.INGEST_DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

